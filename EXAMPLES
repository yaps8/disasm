Output:
Information regarding the disassembly and the file.dot graph (open it with xdot for instance)

The following color and shapes apply for nodes and edges in the file.dot graph.

Nodes:
  Orange -> entrypoint (into trace)
  Blue -> exitpoint (from trace)
  Pink -> node in trace
  White -> node not in trace (static analysis)
Directed edges:
  Color:
    Red -> Jump target
    Black -> Next instruction
  Shape:
    Dashed -> From static analysis only
    Solid -> From trace only
    Bold -> Both
Non-directed edges:
  Black dotted edges -> Overlapping insructions:



Manual example:
Disasm without trace:
python2 disasm.py manual_ex/running-ex -b 0x8048060 -l 0x80480ae -o 0 -e 0x8048060 --elf

Disasm with trace:
python2 disasm.py manual_ex/running-ex -b 0x8048060 -t manual_ex/running-ex_itrace.out --elf

Displaying the layers:
python2 disasm.py manual_ex/running-ex -b 0x8048060 -t manual_ex/running-ex_itrace.out -v --elf


TELocK:
Disasm without trace:
python2 disasm.py telock/telock99-hostname.bin.exe.snapshot2 --entrypoint 0x01006e5b --dump

Disasm with trace:
It is needed to unzip telock's trace: unzip telock/trace3.zip
python2 disasm.py telock/telock99-hostname.bin.exe.snapshot2 --entrypoint 0x01006e5b --dump -T telock/trace3


UPX:
Disasm without trace:
python2 disasm.py upx/upx-hostname.exe.bin.snapshot0 -e 0x010058c0 --dump
python2 disasm.py upx/upx-hostname.exe.bin.snapshot1 -e 0x010011d7 --dump

Disasm with trace:
python2 disasm.py upx/upx-hostname.exe.bin.snapshot0 -e 0x010058c0 --dump -T upx/upx-hostname.exe.bin.trace
python2 disasm.py upx/upx-hostname.exe.bin.snapshot1 -e 0x010011d7 --dump -T upx/upx-hostname.exe.bin.trace


Sane examples:
ls:
python2 disasm.py sane/ls -b 0x08048000 -e 0x08048000 -t sane/ls_itrace.out --elf

mkdir:
python2 disasm.py sane/mkdir -b 0x08048000 -e 0x08048000 -t sane/mkdir_itrace.out --elf

id:
python2 disasm.py sane/id -b 0x08048000 -e 0x08048000 -t sane/id_itrace.out --elf
